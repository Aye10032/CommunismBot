<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aye10032.data.banrecord.mapper.KillRecordMapper">
  <resultMap id="BaseResultMap" type="com.aye10032.data.banrecord.entity.KillRecord">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="qq_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="from_group" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="killed_times" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="kill_times" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, qq_id, from_group, killed_times, kill_times
  </sql>
  <select id="selectByExample" parameterType="com.aye10032.data.banrecord.entity.KillRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from kill_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from kill_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from kill_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.aye10032.data.banrecord.entity.KillRecordExample">
    delete from kill_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.aye10032.data.banrecord.entity.KillRecord">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into kill_record (qq_id, from_group, killed_times, 
      kill_times)
    values (#{qqId,jdbcType=BIGINT}, #{fromGroup,jdbcType=BIGINT}, #{killedTimes,jdbcType=INTEGER}, 
      #{killTimes,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.aye10032.data.banrecord.entity.KillRecord">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into kill_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="qqId != null">
        qq_id,
      </if>
      <if test="fromGroup != null">
        from_group,
      </if>
      <if test="killedTimes != null">
        killed_times,
      </if>
      <if test="killTimes != null">
        kill_times,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="qqId != null">
        #{qqId,jdbcType=BIGINT},
      </if>
      <if test="fromGroup != null">
        #{fromGroup,jdbcType=BIGINT},
      </if>
      <if test="killedTimes != null">
        #{killedTimes,jdbcType=INTEGER},
      </if>
      <if test="killTimes != null">
        #{killTimes,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.aye10032.data.banrecord.entity.KillRecordExample" resultType="java.lang.Long">
    select count(*) from kill_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update kill_record
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.qqId != null">
        qq_id = #{record.qqId,jdbcType=BIGINT},
      </if>
      <if test="record.fromGroup != null">
        from_group = #{record.fromGroup,jdbcType=BIGINT},
      </if>
      <if test="record.killedTimes != null">
        killed_times = #{record.killedTimes,jdbcType=INTEGER},
      </if>
      <if test="record.killTimes != null">
        kill_times = #{record.killTimes,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update kill_record
    set id = #{record.id,jdbcType=INTEGER},
      qq_id = #{record.qqId,jdbcType=BIGINT},
      from_group = #{record.fromGroup,jdbcType=BIGINT},
      killed_times = #{record.killedTimes,jdbcType=INTEGER},
      kill_times = #{record.killTimes,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.aye10032.data.banrecord.entity.KillRecord">
    update kill_record
    <set>
      <if test="qqId != null">
        qq_id = #{qqId,jdbcType=BIGINT},
      </if>
      <if test="fromGroup != null">
        from_group = #{fromGroup,jdbcType=BIGINT},
      </if>
      <if test="killedTimes != null">
        killed_times = #{killedTimes,jdbcType=INTEGER},
      </if>
      <if test="killTimes != null">
        kill_times = #{killTimes,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.aye10032.data.banrecord.entity.KillRecord">
    update kill_record
    set qq_id = #{qqId,jdbcType=BIGINT},
      from_group = #{fromGroup,jdbcType=BIGINT},
      killed_times = #{killedTimes,jdbcType=INTEGER},
      kill_times = #{killTimes,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>