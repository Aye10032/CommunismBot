buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:5.2.0'
        classpath "gradle.plugin.ua.eshepelyuk:ManifestClasspath:1.0.0"
    }
}

plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
    id 'org.springframework.boot' version '2.3.3.RELEASE'
    id "io.spring.dependency-management" version "1.1.5"
}

compileJava {
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8' // 设置目标字节码兼容性版本
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
}

ext {
    set('springCloudVersion', "Hoxton.SR8")
    set('springCloudAlibabaVersion', "2.2.5.RELEASE")
}

apply plugin: "ua.eshepelyuk.ManifestClasspath"
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'java'
apply plugin: 'io.spring.dependency-management'

group 'com.aye10032'
version '3.0.0'

repositories {
    mavenLocal()
    maven { url 'https://maven.aliyun.com/repository/public/' }
    maven { url 'https://jitpack.io' }
//    maven { url "https://repo.mirai.mamoe.net/snapshots" }
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        mavenBom "com.alibaba.cloud:spring-cloud-alibaba-dependencies:${springCloudAlibabaVersion}"
    }
}

dependencies {

    implementation platform("org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}")
    implementation platform("com.alibaba.cloud:spring-cloud-alibaba-dependencies:${springCloudAlibabaVersion}")

    implementation group: 'junit', name: 'junit', version: '4.13.1'

    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    implementation 'org.projectlombok:lombok:1.18.26'
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-test
    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test'

    // https://mvnrepository.com/artifact/com.baomidou/mybatis-plus-boot-starter
    implementation group: 'com.baomidou', name: 'mybatis-plus-boot-starter', version: '3.5.1'

    // https://mvnrepository.com/artifact/org.jdom/jdom
    implementation group: 'org.jdom', name: 'jdom', version: '2.0.2'

    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.11'

    // https://mvnrepository.com/artifact/com.squareup.okhttp3/okhttp-sse
    implementation group: 'com.squareup.okhttp3', name: 'okhttp-sse', version: '4.10.0'

    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.9'

    // 1. Use Guava in your implementation only:
    implementation("com.google.guava:guava:32.1.1-jre")

    // https://mvnrepository.com/artifact/commons-io/commons-io
    implementation group: 'commons-io', name: 'commons-io', version: '2.7'

    // https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient
    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.13'

    // https://mvnrepository.com/artifact/org.apache.httpcomponents/httpcore
    implementation group: 'org.apache.httpcomponents', name: 'httpcore', version: '4.4.13'

    // https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java
    implementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.141.59'

    implementation group: 'com.rometools', name: 'rome', version: '1.18.0'

    implementation group: 'com.github.Aye10032', name: 'rtroapiutil', version: 'v1.2'
//    implementation group: 'com.github.Aye10032', name: 'GenshinUtil', version: 'v1.0.0'

    implementation group: 'io.github.andello', name: 'pinyin4j', version: '0.3.2'

    implementation group: 'cn.bigmodel.openapi', name: 'oapi-java-sdk', version: 'release-V4-2.1.0'

    implementation(fileTree(dir: 'libs', includes: ['*.jar']))

    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-quartz
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-quartz'
    // https://mvnrepository.com/artifact/mysql/mysql-connector-java
    implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.29'
    implementation group: 'org.reflections', name: 'reflections', version: '0.10.2'
    implementation group: 'org.projectlombok', name: 'lombok', version: '1.18.20'
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.20'
    testCompileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.20'
    testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.20'


}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

test {
    useJUnitPlatform()
}
